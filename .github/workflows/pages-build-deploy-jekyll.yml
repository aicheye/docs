# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: pages-build-deploy-jekyll
run-name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths-ignore:
      - '**/*.pdf'
      - 'README.md'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Compile Typst documents
  typst-compile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Typst
        run: |
          curl -L https://github.com/typst/typst/releases/download/v0.13.1/typst-x86_64-unknown-linux-musl.tar.xz -o typst.tar.xz
          tar -xf typst.tar.xz
          sudo mv typst-x86_64-unknown-linux-musl/typst /usr/local/bin/typst
      - name: Find and build all .typ files
        run: |
          find . -type f -name '*.typ' | while read typfile; do
            dirname=$(basename "$(dirname "$typfile")")
            filename=$(basename "$typfile" .typ)
            if [ "$dirname" = "$filename" ]; then
              pdffile="${typfile%.typ}.pdf"
              typst compile "$typfile" "$pdffile"
            fi
          done
      - name: Commit and push PDFs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add '*.pdf'
          git diff --cached --quiet || git commit -m 'chore: build PDFs from Typst sources [auto]'
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} HEAD:${{ github.ref }}
  
  # Generate directory tree in README
  generate-tree:
    runs-on: ubuntu-latest
    needs: typst-compile
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Pull latest changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git pull --rebase
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Run tree generator
        run: python generate_tree.py
      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add README.md
          git diff --cached --quiet || git commit -m 'chore: update README.md with directory tree [auto]'
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} HEAD:${{ github.ref }}
  
  # Build job
  build:
    runs-on: ubuntu-latest
    needs: generate-tree
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Pull latest changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git pull --rebase
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
